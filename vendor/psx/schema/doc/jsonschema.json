{
  "description": "A strict JsonSchema meta schema to simplify code generation",
  "oneOf": [{
    "$ref": "#/definitions/definition"
  }, {
    "$ref": "#/definitions/combination"
  }, {
    "$ref": "#/definitions/reference"
  }],
  "definitions": {
    "common": {
      "description": "Common properties which can be used in any schema",
      "title": "common",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Distinct word which represents this property, may be used to generate i.e. class names or other identifier"
        },
        "description": {
          "type": "string",
          "description": "General description of this property"
        },
        "type": {
          "type": "string",
          "description": "JSON type of the property",
          "enum": ["object", "array", "boolean", "integer", "number", "string"]
        },
        "nullable": {
          "type": "boolean",
          "description": "Whether it is possible to use a null value on this property",
          "default": false
        },
        "deprecated": {
          "type": "boolean",
          "description": "Whether this property is deprecated",
          "default": false
        }
      }
    },
    "commonScalar": {
      "description": "Properties for scalar values",
      "allOf": [{
        "$ref": "#/definitions/common"
      }, {
        "title": "scalar",
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "description": "Describes the specific format of this type i.e. date-time or int64"
          },
          "enum": {
            "type": "array",
            "description": "A list of possible enumeration values",
            "items": {
              "oneOf": [{
                "type": "string"
              },{
                "type": "number"
              }]
            },
            "minItems": 1
          }
        }
      }]
    },
    "commonContainer": {
      "description": "Properties for object values",
      "allOf": [{
        "$ref": "#/definitions/common"
      }, {
        "title": "container",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Distinct word which represents this property, may be used to generate i.e. class names or other identifier"
          },
          "type": {
            "type": "string",
            "enum": ["object"]
          },
          "required": { "$ref": "#/definitions/stringArray" }
        },
        "required": ["title", "type"]
      }]
    },
    "object": {
      "description": "An object represents either a struct or map",
      "oneOf": [{
        "$ref": "#/definitions/objectStruct"
      }, {
        "$ref": "#/definitions/objectMap"
      }]
    },
    "objectStruct": {
      "description": "A struct contains a fix set of defined properties",
      "allOf": [{
        "$ref": "#/definitions/commonContainer"
      }, {
        "title": "struct",
        "type": "object",
        "properties": {
          "properties": {
            "type": "object",
            "additionalProperties": { "$ref": "#" }
          }
        },
        "required": ["properties"]
      }]
    },
    "objectMap": {
      "description": "A map contains variable key value entries",
      "allOf": [{
        "$ref": "#/definitions/commonContainer"
      }, {
        "title": "map",
        "type": "object",
        "properties": {
          "additionalProperties": { "$ref": "#" },
          "maxProperties": { "$ref": "#/definitions/positiveInteger" },
          "minProperties": { "$ref": "#/definitions/positiveInteger" }
        },
        "required": ["additionalProperties"]
      }]
    },
    "array": {
      "description": "An array contains an ordered list of variable values",
      "allOf": [{
        "$ref": "#/definitions/common"
      }, {
        "title": "array",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["array"]
          },
          "items": {
            "$ref": "#/definitions/arrayItem"
          },
          "maxItems": { "$ref": "#/definitions/positiveInteger" },
          "minItems": { "$ref": "#/definitions/positiveInteger" },
          "uniqueItems": { 
            "type": "boolean"
          }
        },
        "required": ["type", "items"]
      }]
    },
    "boolean": {
      "description": "Represents a boolean value",
      "allOf": [{
        "$ref": "#/definitions/commonScalar"
      }, {
        "title": "boolean",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["boolean"]
          }
        },
        "required": ["type"]
      }]
    },
    "number": {
      "description": "Represents a number value which contains also integer",
      "allOf": [{
        "$ref": "#/definitions/commonScalar"
      }, {
        "title": "number",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["number", "integer"]
          },
          "multipleOf": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "maximum": {
            "type": "number"
          },
          "exclusiveMaximum": {
            "type": "boolean",
            "default": false
          },
          "minimum": {
            "type": "number"
          },
          "exclusiveMinimum": {
            "type": "boolean",
            "default": false
          }
        },
        "required": ["type"]
      }]
    },
    "string": {
      "description": "Represents a string value",
      "allOf": [{
        "$ref": "#/definitions/commonScalar"
      }, {
        "title": "string",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["string"]
          },
          "maxLength": { "$ref": "#/definitions/positiveInteger" },
          "minLength": { "$ref": "#/definitions/positiveInteger" },
          "pattern": {
            "type": "string",
            "format": "regex"
          }
        },
        "required": ["type"]
      }]
    },
    "allOf": {
      "description": "Combination keyword to validate all containing schemas",
      "allOf": [{
        "$ref": "#/definitions/common"
      }, {
        "title": "allOf",
        "type": "object",
        "properties": {
          "allOf": { "$ref": "#/definitions/of" }
        },
        "required": ["allOf"]
      }]
    },
    "anyOf": {
      "description": "Combination keyword to validate any containing schemas",
      "allOf": [{
        "$ref": "#/definitions/common"
      }, {
        "title": "anyOf",
        "type": "object",
        "properties": {
          "anyOf": { "$ref": "#/definitions/of" }
        },
        "required": ["anyOf"]
      }]
    },
    "oneOf": {
      "description": "Combination keyword to validate exactly one containing schemas",
      "allOf": [{
        "$ref": "#/definitions/common"
      }, {
        "title": "oneOf",
        "type": "object",
        "properties": {
          "discriminator": { "$ref": "#/definitions/discriminator" },
          "oneOf": { "$ref": "#/definitions/of" }
        },
        "required": ["oneOf"]
      }]
    },
    "discriminator": {
      "description": "Adds support for polymorphism. The discriminator is an object name that is used to differentiate between other schemas which may satisfy the payload description",
      "title": "discriminator",
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string",
          "description": "The name of the property in the payload that will hold the discriminator value"
        },
        "mapping": {
          "type": "object",
          "description": "An object to hold mappings between payload values and schema names or references",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": ["propertyName"]
    },
    "positiveInteger": {
      "description": "Positive integer value",
      "type": "integer",
      "minimum": 0
    },
    "stringArray": {
      "description": "Array string values",
      "type": "array",
      "items": { "type": "string" },
      "minItems": 1
    },
    "of": {
      "description": "Combination values",
      "type": "array",
      "items": {
        "$ref": "#/definitions/objectOrReference"
      }
    },
    "objectOrReference": {
      "description": "Object or reference value",
      "oneOf": [{
        "$ref": "#/definitions/object"
      }, {
        "$ref": "#/definitions/reference"
      }]
    },
    "arrayItem": {
      "description": "Allowed values of an array item",
      "oneOf": [{
        "$ref": "#/definitions/object"
      }, {
        "$ref": "#/definitions/boolean"
      }, {
        "$ref": "#/definitions/number"
      }, {
        "$ref": "#/definitions/string"
      }, {
        "$ref": "#/definitions/reference"
      }]
    },
    "definition": {
      "description": "Represents a concrete type definition",
      "oneOf": [{
        "$ref": "#/definitions/object"
      }, {
        "$ref": "#/definitions/array"
      }, {
        "$ref": "#/definitions/boolean"
      }, {
        "$ref": "#/definitions/number"
      }, {
        "$ref": "#/definitions/string"
      }]
    },
    "combination": {
      "description": "Represents a combination of schemas",
      "oneOf": [{
        "$ref": "#/definitions/allOf"
      }, {
        "$ref": "#/definitions/anyOf"
      }, {
        "$ref": "#/definitions/oneOf"
      }]
    },
    "reference": {
      "description": "Represents a reference to another schema",
      "title": "reference",
      "type": "object",
      "properties": {
        "$ref": {
          "type": "string"
        }
      },
      "required": ["$ref"]
    }
  }
}
